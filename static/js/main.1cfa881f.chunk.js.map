{"version":3,"sources":["morphologyOptions.js","Morphology.js","Word.js","VerseSelector.js","dataProcessing.js","App.js","serviceWorker.js","index.js"],"names":["value","text","parsing","cas","genre","nombre","degr√©","voix","mode","temps","personne","Morphology","checkAnswer","useState","setParsing","handleChange","field","className","Dropdown","key","placeholder","selection","compact","nature","options","morphologyOptions","onChange","e","buildParsingDropdowns","parsingFields","find","Object","entries","reduce","dropdowns","values","push","Word","word","isCorrect","setIsCorrect","greek","answer","VerseSelector","getVerse","book","bookOptions","chapter","chapterOptions","verse","verseOptions","history","useHistory","bookFiles","getBookData","a","axios","get","data","verseNumbers","bookData","trim","split","map","item","row","part","id","reference","match","parseInt","includes","rawParsing","App","params","useParams","isLoading","setIsLoading","setBook","setChapter","setVerse","words","setWords","setBookData","setVerseNumbers","getWords","newBook","newChapter","newVerse","length","setNewReference","checkedChapter","keys","String","checkedVerse","filter","useEffect","c","v","Container","Loader","active","size","Boolean","window","location","hostname","ReactDOM","render","path","children","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1cfa881f.chunk.js","sourcesContent":["export default [\n  { \n    value: 'A-',\n    text: 'adjectif',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],      \n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ],\n      degr√©: [\n        { value: '-', text: '-' },\n        { value: 'C', text: 'comparatif' },\n        { value: 'S', text: 'superlatif' }\n      ]\n    } \n  },\n  {\n    value: 'N-',\n    text: 'nom',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'RA',\n    text: 'article d√©fini',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'RD',\n    text: 'pronom d√©monstratif',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'RI',\n    text: 'pronom interrogatif/ind√©fini',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'RP',\n    text: 'pronom personnel',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: '', text: '-' },\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'RR',\n    text: 'pronom relatif',\n    parsing: {\n      cas: [\n        { value: 'N', text: 'N' },\n        { value: 'A', text: 'A' },\n        { value: 'G', text: 'G' },\n        { value: 'D', text: 'D' },\n      ],\n      genre: [\n        { value: 'M', text: 'm' },\n        { value: 'F', text: 'f' },\n        { value: 'N', text: 'n' }\n      ],\n      nombre: [\n        { value: 'S', text: 'sg' },\n        { value: 'P', text: 'pl' }\n      ]\n    }\n  },\n  {\n    value: 'V-',\n    text: 'verbe',\n    parsing: {\n      voix: [\n        { value: 'A', text: 'active' },\n        { value: 'M', text: 'moyenne' },\n        { value: 'P', text: 'passive' }\n      ],\n      mode: [\n        {\n          value: 'I',\n          text: 'indicatif',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              { value: 'I', text: 'imparfait' },\n              { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              { value: 'X', text: 'parfait' },\n              { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            personne: [\n              { value: '1', text: '1√®re' },\n              { value: '2', text: '2√®me' },\n              { value: '3', text: '3√®me' }\n            ],\n            nombre: [\n              { value: 'S', text: 'sg' },\n              { value: 'P', text: 'pl' }\n            ]\n          }\n        },\n        {\n          value: 'D',\n          text: 'imp√©ratif',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              { value: 'I', text: 'imparfait' },\n              { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              { value: 'X', text: 'parfait' },\n              { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            personne: [\n              // { value: '1', text: '1√®re' },\n              { value: '2', text: '2√®me' },\n              // { value: '3', text: '3√®me' }\n            ],\n            nombre: [\n              { value: 'S', text: 'sg' },\n              { value: 'P', text: 'pl' }\n            ]\n          }\n        },\n        {\n          value: 'S',\n          text: 'subjonctif',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              { value: 'I', text: 'imparfait' },\n              { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              { value: 'X', text: 'parfait' },\n              { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            personne: [\n              { value: '1', text: '1√®re' },\n              { value: '2', text: '2√®me' },\n              { value: '3', text: '3√®me' }\n            ],\n            nombre: [\n              { value: 'S', text: 'sg' },\n              { value: 'P', text: 'pl' }\n            ]\n          }\n        },\n        {\n          value: 'O',\n          text: 'optatif',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              { value: 'I', text: 'imparfait' },\n              { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              { value: 'X', text: 'parfait' },\n              { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            personne: [\n              { value: '1', text: '1√®re' },\n              { value: '2', text: '2√®me' },\n              { value: '3', text: '3√®me' }\n            ],\n            nombre: [\n              { value: 'S', text: 'sg' },\n              { value: 'P', text: 'pl' }\n            ]\n          }\n        },\n        {\n          value: 'N',\n          text: 'infinitif',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              // { value: 'I', text: 'imparfait' },\n              // { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              // { value: 'X', text: 'parfait' },\n              // { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            // personne: [\n            //   { value: '1', text: '1√®re' },\n            //   { value: '2', text: '2√®me' },\n            //   { value: '3', text: '3√®me' }\n            // ],\n            // nombre: [\n            //   { value: 'S', text: 'sg' },\n            //   { value: 'P', text: 'pl' }\n            // ]\n          }\n        },\n        {\n          value: 'P',\n          text: 'participe',\n          parsing: {\n            temps: [\n              { value: 'P', text: 'pr√©sent' },\n              // { value: 'I', text: 'imparfait' },\n              // { value: 'F', text: 'futur' },\n              { value: 'A', text: 'aoriste' },\n              // { value: 'X', text: 'parfait' },\n              // { value: 'Y', text: 'plus-que-parfait' }\n            ],\n            // personne: [\n            //   { value: '1', text: '1√®re' },\n            //   { value: '2', text: '2√®me' },\n            //   { value: '3', text: '3√®me' }\n            // ],\n            cas: [\n              { value: 'N', text: 'N' },\n              { value: 'A', text: 'A' },\n              { value: 'G', text: 'G' },\n              { value: 'D', text: 'D' }\n            ],\n            genre: [\n              { value: 'M', text: 'm' },\n              { value: 'F', text: 'f' },\n              { value: 'N', text: 'n' }\n            ],\n            nombre: [\n              { value: 'S', text: 'sg' },\n              { value: 'P', text: 'pl' }\n            ],\n          }\n        }\n      ]\n    }\n  },\n  { value: 'P-', text: 'pr√©position' },\n  { value: 'X-', text: 'particule' },\n  { value: 'C-', text: 'conjonction' },\n  { value: 'D-', text: 'adverbe' },\n  { value: 'I-', text: 'interjection' }\n];","import React, { useState } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nimport morphologyOptions from './morphologyOptions'\nimport './Morphology.css'\n\n\n\nconst Morphology = ({ checkAnswer }) => {\n  // let [isCorrect, setIsCorrect] = useState(false);\n  let [parsing, setParsing] = useState({\n    'personne': '',\n    'temps': '',\n    'voix': '',\n    'mode': '',\n    'cas': '',\n    'nombre': '',\n    'genre': '',\n    'degr√©': ''\n   });\n\n  const handleChange = (field, value) => {\n    setParsing({\n      ...parsing,\n      [field]: value\n    });\n    // console.log(parsing, answer)\n    checkAnswer({\n      ...parsing,\n      [field]: value\n    });\n  }\n\n  // const checkAnswer = x => {\n  //   console.log('check', x, answer)\n  //   for (const field in x) {\n  //     console.log('check', field, x[field], answer[field])\n  //     if (x[field] !== answer[field]) {\n  //       setIsCorrect(false);\n  //       return;\n  //     }\n  //   }\n  //   setIsCorrect(true);\n  // }\n\n  const buildParsingDropdowns = (options, value) => {\n    let parsingFields = options.find(field => field.value === value);\n    if (!parsingFields || !parsingFields.parsing) {\n      return;\n    }\n    \n    return Object.entries(parsingFields.parsing).reduce((dropdowns, [field, values]) => {\n      dropdowns.push((\n        <Dropdown\n          key={field}\n          placeholder={field}\n          selection\n          compact\n          options={values}\n          onChange={(e, {value}) => handleChange(field, value)}\n        ></Dropdown>\n      ));\n\n      if (parsingFields.parsing[field] && parsing[field] !== '') {\n        dropdowns.push(buildParsingDropdowns(parsingFields.parsing[field], parsing[field]))\n      }\n      return dropdowns\n    }, []);\n  }\n\n  return (\n    <div className=\"Morphology\">\n      <Dropdown\n        key=\"nature\"\n        placeholder=\"nature\"\n        selection\n        compact\n        value={parsing.nature}\n        options={morphologyOptions}\n        onChange={(e, {value}) => handleChange('nature', value)}\n      ></Dropdown>\n      { buildParsingDropdowns(morphologyOptions, parsing.nature) }\n    </div>\n  )\n};\n\nexport default Morphology;","import React, { useState } from 'react';\nimport Morphology from './Morphology';\n\nimport './Word.css'\n\nconst Word = ({word}) => {\n  let [isCorrect, setIsCorrect] = useState(false);\n\n  const checkAnswer = answer => {\n    for (const field in answer) {\n      if (answer[field] !== word.parsing[field]) {\n        setIsCorrect(false);\n        return;\n      }\n    }\n    setIsCorrect(true);\n  }\n\n  return word\n    ? (\n      <div className=\"Word\">\n        <div\n          className={\"greek\" + (isCorrect ? ' correct' : '')}\n        >{word.greek}</div>\n        <Morphology\n          key={word.greek}\n          checkAnswer={ checkAnswer }\n        ></Morphology>\n        \n      </div>\n    )\n    : '';\n};\n\nexport default Word;","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { useHistory } from \"react-router-dom\";\n\nimport './VerseSelector.css';\n\n\nfunction VerseSelector({ getVerse, book, bookOptions, chapter, chapterOptions, verse, verseOptions }) {\n  let history = useHistory();\n\n  return (\n    <div className='VerseSelector'>\n      <Dropdown\n        className='book'\n        selection\n        value={book}\n        options={bookOptions}\n        onChange={(e, {value}) => {\n          history.push(`/${value}/${chapter}/${verse}`);\n          getVerse(value, chapter, verse);\n        }}\n      ></Dropdown>\n      {' '}\n      <Dropdown\n        className='chapter'\n        selection\n        compact\n        value={chapter}\n        options={chapterOptions}\n        onChange={(e, {value}) => {\n          history.push(`/${book}/${value}/${verse}`);\n          getVerse(book, value, verse);\n        }}\n      ></Dropdown>\n      {':'}\n      <Dropdown\n        className='verse'\n        selection\n        compact\n        value={verse}\n        options={verseOptions}\n        onChange={(e, {value}) => {\n          history.push(`/${book}/${chapter}/${value}`);\n          getVerse(book, chapter, value);\n        }}\n      ></Dropdown>\n    </div>\n  );\n}\n\nexport default VerseSelector;\n","import axios from 'axios';\n\nconst bookFiles = {\n  'Matthieu': '61-Mt-morphgnt.txt',\n  'Marc': '62-Mk-morphgnt.txt',\n  'Luc': '63-Lk-morphgnt.txt',\n  'Jean': '64-Jn-morphgnt.txt',\n  'Actes': '65-Ac-morphgnt.txt',\n  'Romains': '66-Ro-morphgnt.txt',\n  '1 Corinthiens': '67-1Co-morphgnt.txt',\n  '2 Corinthiens': '68-2Co-morphgnt.txt',\n  'Galates': '69-Ga-morphgnt.txt',\n  '√âph√©siens': '70-Eph-morphgnt.txt',\n  'Philippiens': '71-Php-morphgnt.txt',\n  'Colossiens': '72-Col-morphgnt.txt',\n  '1 Thessaloniciens': '73-1Th-morphgnt.txt',\n  '2 Thessaloniciens': '74-2Th-morphgnt.txt',\n  '1 Timoth√©e': '75-1Ti-morphgnt.txt',\n  '2 Timoth√©e': '76-2Ti-morphgnt.txt',\n  'Tite': '77-Tit-morphgnt.txt',\n  'Phil√©mon': '78-Phm-morphgnt.txt',\n  'H√©breux': '79-Heb-morphgnt.txt',\n  'Jacques': '80-Jas-morphgnt.txt',\n  '1 Pierre': '81-1Pe-morphgnt.txt',\n  '2 Pierre': '82-2Pe-morphgnt.txt',\n  '1 Jean': '83-1Jn-morphgnt.txt',\n  '2 Jean': '84-2Jn-morphgnt.txt',\n  '3 Jean': '85-3Jn-morphgnt.txt',\n  'Jude': '86-Jud-morphgnt.txt',\n  'Apocalypse': '87-Re-morphgnt.txt'\n}\n\nconst bookOptions = [\n  { text: 'Matthieu', value: 'Matthieu' },\n  { text: 'Marc', value: 'Marc' },\n  { text: 'Luc', value: 'Luc' },\n  { text: 'Jean', value: 'Jean' },\n  { text: 'Actes', value: 'Actes' },\n  { text: 'Romains', value: 'Romains' },\n  { text: '1 Corinthiens', value: '1 Corinthiens' },\n  { text: '2 Corinthiens', value: '2 Corinthiens' },\n  { text: 'Galates', value: 'Galates' },\n  { text: '√âph√©siens', value: '√âph√©siens' },\n  { text: 'Philippiens', value: 'Philippiens' },\n  { text: 'Colossiens', value: 'Colossiens' },\n  { text: '1 Thessaloniciens', value: '1 Thessaloniciens' },\n  { text: '2 Thessaloniciens', value: '2 Thessaloniciens' },\n  { text: '1 Timoth√©e', value: '1 Timoth√©e' },\n  { text: '2 Timoth√©e', value: '2 Timoth√©e' },\n  { text: 'Tite', value: 'Tite' },\n  { text: 'Phil√©mon', value: 'Phil√©mon' },\n  { text: 'H√©breux', value: 'H√©breux' },\n  { text: 'Jacques', value: 'Jacques' },\n  { text: '1 Pierre', value: '1 Pierre' },\n  { text: '2 Pierre', value: '2 Pierre' },\n  { text: '1 Jean', value: '1 Jean' },\n  { text: '2 Jean', value: '2 Jean' },\n  { text: '3 Jean', value: '3 Jean' },\n  { text: 'Jude', value: 'Jude' },\n  { text: 'Apocalypse', value: 'Apocalypse' }\n]\n\nasync function getBookData(book = 'Jean') {\n  let data = await axios.get(`https://raw.githubusercontent.com/morphgnt/sblgnt/master/${bookFiles[book]}`);\n  let verseNumbers = {};\n  let bookData = data.data.trim().split('\\n').map(item => {\n    let row = item.split(' ');\n    let parsing = !row[2]\n      ? row[2]\n      : row[2].split('').reduce((parsing, part, id) => {\n        const code = [\n          'personne',\n          'temps',\n          'voix',\n          'mode',\n          'cas',\n          'nombre',\n          'genre',\n          'degr√©'\n        ]\n\n        parsing[code[id]] = part === '-' ? '' : part\n        parsing.nature = row[1]\n        return parsing\n      }, {});\n\n    let reference = row[0].match(/(\\d{2})(\\d{2})(\\d{2})/);\n\n    if (!verseNumbers[parseInt(reference[2])]) {\n      verseNumbers[parseInt(reference[2])] = [];\n    } else if (!verseNumbers[ parseInt(reference[2]) ].includes(parseInt(reference[3]))) {\n      verseNumbers[ parseInt(reference[2]) ].push(parseInt(reference[3]));\n    }\n    \n\n    return {\n      reference,\n      book: book,\n      chapter: parseInt(reference[2]),\n      verse: parseInt(reference[3]),\n      greek: row[3],\n      rawParsing: row[2],\n      parsing\n    };\n  });\n\n  return [ bookData, verseNumbers ]\n}\n\n// function process(words) {\n//   if (!words.length) {return}\n  \n//   console.log(words.reduce((morph, word) => {\n//     if (!word.parsing) { return morph; }\n//     if (!morph[word.parsing.nature]) {\n//       morph[word.parsing.nature] = {\n//         case: new Set(),\n//         degree: new Set(),\n//         gender: new Set(),\n//         mood: new Set(),\n//         number: new Set(),\n//         person: new Set(),\n//         tense: new Set(),\n//         voice: new Set(),\n//       };\n//     }\n\n//     morph[word.parsing.nature] = {\n//       case: morph[word.parsing.nature].case.add(word.parsing.case),\n//       degree: morph[word.parsing.nature].degree.add(word.parsing.degree),\n//       gender: morph[word.parsing.nature].gender.add(word.parsing.gender),\n//       mood: morph[word.parsing.nature].mood.add(word.parsing.mood),\n//       number: morph[word.parsing.nature].number.add(word.parsing.number),\n//       person: morph[word.parsing.nature].person.add(word.parsing.person),\n//       tense: morph[word.parsing.nature].tense.add(word.parsing.tense),\n//       voice: morph[word.parsing.nature].voice.add(word.parsing.voice)\n//     }\n\n//     return morph\n//   }, {}))\n// }\n\n\n// function compileNT() {\n\n// }\n  \n\nexport {\n  getBookData,\n  bookOptions\n};","import React, { useState, useEffect } from 'react';\nimport { Container, Loader } from 'semantic-ui-react';\nimport {\n  useParams,\n  useHistory\n} from \"react-router-dom\";\nimport Word from './Word';\nimport VerseSelector from './VerseSelector';\nimport { getBookData, bookOptions } from './dataProcessing.js';\n\nimport './App.css';\n\n\nfunction App() {\n  let params = useParams();\n  let history = useHistory();\n\n  let [isLoading, setIsLoading] = useState(false);\n  let [book, setBook] = useState(params.book || 'Jean');\n  let [chapter, setChapter] = useState(parseInt(params.chapter) || 1);\n  let [verse, setVerse] = useState(parseInt(params.verse) || 1);\n  let [words, setWords] = useState(null);\n  let [bookData, setBookData] = useState([])\n  let [verseNumbers, setVerseNumbers] = useState({})\n  \n\n  async function getWords(newBook, newChapter, newVerse) {\n    // console.log('getting new Words', newBook, newChapter, newVerse)\n    setIsLoading(true);\n    // get data\n    if (newBook !== book || !bookData.length) {\n      let data = await getBookData(newBook); // TODO return object?\n      setBook(newBook);\n      setBookData(data[0]); \n      setVerseNumbers(data[1]);\n      setNewReference(data, newBook, newChapter, newVerse);\n    } else {\n      setNewReference([bookData, verseNumbers], newBook, newChapter, newVerse);\n    }\n  }\n\n  function setNewReference(data, newBook, newChapter, newVerse) {\n    // set chapter\n    let checkedChapter = Object.keys(data[1]).includes(String(newChapter)) ? newChapter : 1;\n    setChapter(checkedChapter);\n\n    // set verse\n    let checkedVerse = data[1][checkedChapter] && data[1][checkedChapter].includes(newVerse) ? newVerse : 1;\n    setVerse(checkedVerse);\n    \n    // set verse words\n    setWords(data[0].filter(word => word.chapter === checkedChapter && word.verse === checkedVerse));\n    history.push(`/${newBook}/${checkedChapter}/${checkedVerse}`);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    if (words === null && !isLoading) {\n      getWords(book, chapter, verse);\n    }\n  });\n\n  return Object.keys(verseNumbers).length && verseNumbers[chapter] && !isLoading\n    ? (\n      <div className='App'>\n        <VerseSelector\n          book={book}\n          bookOptions={bookOptions}\n          chapter={chapter}\n          chapterOptions={Object.keys(verseNumbers).map(c => ({ text: parseInt(c), value: parseInt(c) }))}\n          verse={verse}\n          verseOptions={verseNumbers[chapter].map(v => ({ text: v, value: v }))}\n          getVerse={getWords}\n        ></VerseSelector>\n        \n        <Container>\n          <h1>{book} {chapter}:{verse}</h1>\n\n          <div className='Words'>\n            { words && words.map((word, id) => (\n              <Word\n                word={word}\n                key={`${word}-${id}`}\n              ></Word>\n            )) }\n          </div>\n        </Container>\n      </div>\n    )\n    : <Loader active size='large'>Chargement</Loader>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/:book?/:chapter?/:verse?\" children={<App />} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}